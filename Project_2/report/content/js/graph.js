/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "maxY": 37463.0, "series": [{"data": [[0.0, 60.0], [0.1, 60.0], [0.2, 60.0], [0.3, 60.0], [0.4, 60.0], [0.5, 60.0], [0.6, 60.0], [0.7, 60.0], [0.8, 60.0], [0.9, 60.0], [1.0, 63.0], [1.1, 63.0], [1.2, 63.0], [1.3, 63.0], [1.4, 63.0], [1.5, 68.0], [1.6, 68.0], [1.7, 68.0], [1.8, 68.0], [1.9, 68.0], [2.0, 74.0], [2.1, 74.0], [2.2, 74.0], [2.3, 74.0], [2.4, 74.0], [2.5, 75.0], [2.6, 75.0], [2.7, 75.0], [2.8, 75.0], [2.9, 75.0], [3.0, 87.0], [3.1, 87.0], [3.2, 87.0], [3.3, 87.0], [3.4, 87.0], [3.5, 91.0], [3.6, 91.0], [3.7, 91.0], [3.8, 91.0], [3.9, 91.0], [4.0, 97.0], [4.1, 97.0], [4.2, 97.0], [4.3, 97.0], [4.4, 97.0], [4.5, 109.0], [4.6, 109.0], [4.7, 109.0], [4.8, 109.0], [4.9, 109.0], [5.0, 111.0], [5.1, 111.0], [5.2, 111.0], [5.3, 111.0], [5.4, 111.0], [5.5, 111.0], [5.6, 111.0], [5.7, 111.0], [5.8, 111.0], [5.9, 111.0], [6.0, 111.0], [6.1, 111.0], [6.2, 111.0], [6.3, 111.0], [6.4, 111.0], [6.5, 112.0], [6.6, 112.0], [6.7, 112.0], [6.8, 112.0], [6.9, 112.0], [7.0, 118.0], [7.1, 118.0], [7.2, 118.0], [7.3, 118.0], [7.4, 118.0], [7.5, 128.0], [7.6, 128.0], [7.7, 128.0], [7.8, 128.0], [7.9, 128.0], [8.0, 134.0], [8.1, 134.0], [8.2, 134.0], [8.3, 134.0], [8.4, 134.0], [8.5, 137.0], [8.6, 137.0], [8.7, 137.0], [8.8, 137.0], [8.9, 137.0], [9.0, 386.0], [9.1, 386.0], [9.2, 386.0], [9.3, 386.0], [9.4, 386.0], [9.5, 475.0], [9.6, 475.0], [9.7, 475.0], [9.8, 475.0], [9.9, 475.0], [10.0, 479.0], [10.1, 479.0], [10.2, 479.0], [10.3, 479.0], [10.4, 479.0], [10.5, 487.0], [10.6, 487.0], [10.7, 487.0], [10.8, 487.0], [10.9, 487.0], [11.0, 487.0], [11.1, 487.0], [11.2, 487.0], [11.3, 487.0], [11.4, 487.0], [11.5, 509.0], [11.6, 509.0], [11.7, 509.0], [11.8, 509.0], [11.9, 509.0], [12.0, 510.0], [12.1, 510.0], [12.2, 510.0], [12.3, 510.0], [12.4, 510.0], [12.5, 511.0], [12.6, 511.0], [12.7, 511.0], [12.8, 511.0], [12.9, 511.0], [13.0, 545.0], [13.1, 545.0], [13.2, 545.0], [13.3, 545.0], [13.4, 545.0], [13.5, 553.0], [13.6, 553.0], [13.7, 553.0], [13.8, 553.0], [13.9, 553.0], [14.0, 867.0], [14.1, 867.0], [14.2, 867.0], [14.3, 867.0], [14.4, 867.0], [14.5, 911.0], [14.6, 911.0], [14.7, 911.0], [14.8, 911.0], [14.9, 911.0], [15.0, 945.0], [15.1, 945.0], [15.2, 945.0], [15.3, 945.0], [15.4, 945.0], [15.5, 1019.0], [15.6, 1019.0], [15.7, 1019.0], [15.8, 1019.0], [15.9, 1019.0], [16.0, 1087.0], [16.1, 1087.0], [16.2, 1087.0], [16.3, 1087.0], [16.4, 1087.0], [16.5, 1110.0], [16.6, 1110.0], [16.7, 1110.0], [16.8, 1110.0], [16.9, 1110.0], [17.0, 1163.0], [17.1, 1163.0], [17.2, 1163.0], [17.3, 1163.0], [17.4, 1163.0], [17.5, 1234.0], [17.6, 1234.0], [17.7, 1234.0], [17.8, 1234.0], [17.9, 1234.0], [18.0, 1269.0], [18.1, 1269.0], [18.2, 1269.0], [18.3, 1269.0], [18.4, 1269.0], [18.5, 1339.0], [18.6, 1339.0], [18.7, 1339.0], [18.8, 1339.0], [18.9, 1339.0], [19.0, 1387.0], [19.1, 1387.0], [19.2, 1387.0], [19.3, 1387.0], [19.4, 1387.0], [19.5, 1430.0], [19.6, 1430.0], [19.7, 1430.0], [19.8, 1430.0], [19.9, 1430.0], [20.0, 1443.0], [20.1, 1443.0], [20.2, 1443.0], [20.3, 1443.0], [20.4, 1443.0], [20.5, 1470.0], [20.6, 1470.0], [20.7, 1470.0], [20.8, 1470.0], [20.9, 1470.0], [21.0, 1475.0], [21.1, 1475.0], [21.2, 1475.0], [21.3, 1475.0], [21.4, 1475.0], [21.5, 1499.0], [21.6, 1499.0], [21.7, 1499.0], [21.8, 1499.0], [21.9, 1499.0], [22.0, 1500.0], [22.1, 1500.0], [22.2, 1500.0], [22.3, 1500.0], [22.4, 1500.0], [22.5, 1540.0], [22.6, 1540.0], [22.7, 1540.0], [22.8, 1540.0], [22.9, 1540.0], [23.0, 1548.0], [23.1, 1548.0], [23.2, 1548.0], [23.3, 1548.0], [23.4, 1548.0], [23.5, 1554.0], [23.6, 1554.0], [23.7, 1554.0], [23.8, 1554.0], [23.9, 1554.0], [24.0, 1559.0], [24.1, 1559.0], [24.2, 1559.0], [24.3, 1559.0], [24.4, 1559.0], [24.5, 1572.0], [24.6, 1572.0], [24.7, 1572.0], [24.8, 1572.0], [24.9, 1572.0], [25.0, 1610.0], [25.1, 1610.0], [25.2, 1610.0], [25.3, 1610.0], [25.4, 1610.0], [25.5, 1626.0], [25.6, 1626.0], [25.7, 1626.0], [25.8, 1626.0], [25.9, 1626.0], [26.0, 1651.0], [26.1, 1651.0], [26.2, 1651.0], [26.3, 1651.0], [26.4, 1651.0], [26.5, 1659.0], [26.6, 1659.0], [26.7, 1659.0], [26.8, 1659.0], [26.9, 1659.0], [27.0, 1680.0], [27.1, 1680.0], [27.2, 1680.0], [27.3, 1680.0], [27.4, 1680.0], [27.5, 1726.0], [27.6, 1726.0], [27.7, 1726.0], [27.8, 1726.0], [27.9, 1726.0], [28.0, 1743.0], [28.1, 1743.0], [28.2, 1743.0], [28.3, 1743.0], [28.4, 1743.0], [28.5, 1751.0], [28.6, 1751.0], [28.7, 1751.0], [28.8, 1751.0], [28.9, 1751.0], [29.0, 1776.0], [29.1, 1776.0], [29.2, 1776.0], [29.3, 1776.0], [29.4, 1776.0], [29.5, 1779.0], [29.6, 1779.0], [29.7, 1779.0], [29.8, 1779.0], [29.9, 1779.0], [30.0, 1782.0], [30.1, 1782.0], [30.2, 1782.0], [30.3, 1782.0], [30.4, 1782.0], [30.5, 1821.0], [30.6, 1821.0], [30.7, 1821.0], [30.8, 1821.0], [30.9, 1821.0], [31.0, 1827.0], [31.1, 1827.0], [31.2, 1827.0], [31.3, 1827.0], [31.4, 1827.0], [31.5, 1862.0], [31.6, 1862.0], [31.7, 1862.0], [31.8, 1862.0], [31.9, 1862.0], [32.0, 1881.0], [32.1, 1881.0], [32.2, 1881.0], [32.3, 1881.0], [32.4, 1881.0], [32.5, 1928.0], [32.6, 1928.0], [32.7, 1928.0], [32.8, 1928.0], [32.9, 1928.0], [33.0, 1948.0], [33.1, 1948.0], [33.2, 1948.0], [33.3, 1948.0], [33.4, 1948.0], [33.5, 2034.0], [33.6, 2034.0], [33.7, 2034.0], [33.8, 2034.0], [33.9, 2034.0], [34.0, 2084.0], [34.1, 2084.0], [34.2, 2084.0], [34.3, 2084.0], [34.4, 2084.0], [34.5, 2108.0], [34.6, 2108.0], [34.7, 2108.0], [34.8, 2108.0], [34.9, 2108.0], [35.0, 2144.0], [35.1, 2144.0], [35.2, 2144.0], [35.3, 2144.0], [35.4, 2144.0], [35.5, 2192.0], [35.6, 2192.0], [35.7, 2192.0], [35.8, 2192.0], [35.9, 2192.0], [36.0, 2196.0], [36.1, 2196.0], [36.2, 2196.0], [36.3, 2196.0], [36.4, 2196.0], [36.5, 2218.0], [36.6, 2218.0], [36.7, 2218.0], [36.8, 2218.0], [36.9, 2218.0], [37.0, 2224.0], [37.1, 2224.0], [37.2, 2224.0], [37.3, 2224.0], [37.4, 2224.0], [37.5, 2232.0], [37.6, 2232.0], [37.7, 2232.0], [37.8, 2232.0], [37.9, 2232.0], [38.0, 2299.0], [38.1, 2299.0], [38.2, 2299.0], [38.3, 2299.0], [38.4, 2299.0], [38.5, 2307.0], [38.6, 2307.0], [38.7, 2307.0], [38.8, 2307.0], [38.9, 2307.0], [39.0, 2378.0], [39.1, 2378.0], [39.2, 2378.0], [39.3, 2378.0], [39.4, 2378.0], [39.5, 2383.0], [39.6, 2383.0], [39.7, 2383.0], [39.8, 2383.0], [39.9, 2383.0], [40.0, 2430.0], [40.1, 2430.0], [40.2, 2430.0], [40.3, 2430.0], [40.4, 2430.0], [40.5, 2455.0], [40.6, 2455.0], [40.7, 2455.0], [40.8, 2455.0], [40.9, 2455.0], [41.0, 2490.0], [41.1, 2490.0], [41.2, 2490.0], [41.3, 2490.0], [41.4, 2490.0], [41.5, 2497.0], [41.6, 2497.0], [41.7, 2497.0], [41.8, 2497.0], [41.9, 2497.0], [42.0, 2511.0], [42.1, 2511.0], [42.2, 2511.0], [42.3, 2511.0], [42.4, 2511.0], [42.5, 2534.0], [42.6, 2534.0], [42.7, 2534.0], [42.8, 2534.0], [42.9, 2534.0], [43.0, 2556.0], [43.1, 2556.0], [43.2, 2556.0], [43.3, 2556.0], [43.4, 2556.0], [43.5, 2564.0], [43.6, 2564.0], [43.7, 2564.0], [43.8, 2564.0], [43.9, 2564.0], [44.0, 2575.0], [44.1, 2575.0], [44.2, 2575.0], [44.3, 2575.0], [44.4, 2575.0], [44.5, 2579.0], [44.6, 2579.0], [44.7, 2579.0], [44.8, 2579.0], [44.9, 2579.0], [45.0, 2587.0], [45.1, 2587.0], [45.2, 2587.0], [45.3, 2587.0], [45.4, 2587.0], [45.5, 2590.0], [45.6, 2590.0], [45.7, 2590.0], [45.8, 2590.0], [45.9, 2590.0], [46.0, 2615.0], [46.1, 2615.0], [46.2, 2615.0], [46.3, 2615.0], [46.4, 2615.0], [46.5, 2637.0], [46.6, 2637.0], [46.7, 2637.0], [46.8, 2637.0], [46.9, 2637.0], [47.0, 2637.0], [47.1, 2637.0], [47.2, 2637.0], [47.3, 2637.0], [47.4, 2637.0], [47.5, 2656.0], [47.6, 2656.0], [47.7, 2656.0], [47.8, 2656.0], [47.9, 2656.0], [48.0, 2674.0], [48.1, 2674.0], [48.2, 2674.0], [48.3, 2674.0], [48.4, 2674.0], [48.5, 2684.0], [48.6, 2684.0], [48.7, 2684.0], [48.8, 2684.0], [48.9, 2684.0], [49.0, 2705.0], [49.1, 2705.0], [49.2, 2705.0], [49.3, 2705.0], [49.4, 2705.0], [49.5, 2717.0], [49.6, 2717.0], [49.7, 2717.0], [49.8, 2717.0], [49.9, 2717.0], [50.0, 2751.0], [50.1, 2751.0], [50.2, 2751.0], [50.3, 2751.0], [50.4, 2751.0], [50.5, 2851.0], [50.6, 2851.0], [50.7, 2851.0], [50.8, 2851.0], [50.9, 2851.0], [51.0, 2860.0], [51.1, 2860.0], [51.2, 2860.0], [51.3, 2860.0], [51.4, 2860.0], [51.5, 2962.0], [51.6, 2962.0], [51.7, 2962.0], [51.8, 2962.0], [51.9, 2962.0], [52.0, 2964.0], [52.1, 2964.0], [52.2, 2964.0], [52.3, 2964.0], [52.4, 2964.0], [52.5, 2981.0], [52.6, 2981.0], [52.7, 2981.0], [52.8, 2981.0], [52.9, 2981.0], [53.0, 2999.0], [53.1, 2999.0], [53.2, 2999.0], [53.3, 2999.0], [53.4, 2999.0], [53.5, 3033.0], [53.6, 3033.0], [53.7, 3033.0], [53.8, 3033.0], [53.9, 3033.0], [54.0, 3035.0], [54.1, 3035.0], [54.2, 3035.0], [54.3, 3035.0], [54.4, 3035.0], [54.5, 3058.0], [54.6, 3058.0], [54.7, 3058.0], [54.8, 3058.0], [54.9, 3058.0], [55.0, 3063.0], [55.1, 3063.0], [55.2, 3063.0], [55.3, 3063.0], [55.4, 3063.0], [55.5, 3068.0], [55.6, 3068.0], [55.7, 3068.0], [55.8, 3068.0], [55.9, 3068.0], [56.0, 3190.0], [56.1, 3190.0], [56.2, 3190.0], [56.3, 3190.0], [56.4, 3190.0], [56.5, 3238.0], [56.6, 3238.0], [56.7, 3238.0], [56.8, 3238.0], [56.9, 3238.0], [57.0, 3242.0], [57.1, 3242.0], [57.2, 3242.0], [57.3, 3242.0], [57.4, 3242.0], [57.5, 3273.0], [57.6, 3273.0], [57.7, 3273.0], [57.8, 3273.0], [57.9, 3273.0], [58.0, 3298.0], [58.1, 3298.0], [58.2, 3298.0], [58.3, 3298.0], [58.4, 3298.0], [58.5, 3309.0], [58.6, 3309.0], [58.7, 3309.0], [58.8, 3309.0], [58.9, 3309.0], [59.0, 3357.0], [59.1, 3357.0], [59.2, 3357.0], [59.3, 3357.0], [59.4, 3357.0], [59.5, 3389.0], [59.6, 3389.0], [59.7, 3389.0], [59.8, 3389.0], [59.9, 3389.0], [60.0, 3396.0], [60.1, 3396.0], [60.2, 3396.0], [60.3, 3396.0], [60.4, 3396.0], [60.5, 3434.0], [60.6, 3434.0], [60.7, 3434.0], [60.8, 3434.0], [60.9, 3434.0], [61.0, 3495.0], [61.1, 3495.0], [61.2, 3495.0], [61.3, 3495.0], [61.4, 3495.0], [61.5, 3512.0], [61.6, 3512.0], [61.7, 3512.0], [61.8, 3512.0], [61.9, 3512.0], [62.0, 3617.0], [62.1, 3617.0], [62.2, 3617.0], [62.3, 3617.0], [62.4, 3617.0], [62.5, 3630.0], [62.6, 3630.0], [62.7, 3630.0], [62.8, 3630.0], [62.9, 3630.0], [63.0, 3658.0], [63.1, 3658.0], [63.2, 3658.0], [63.3, 3658.0], [63.4, 3658.0], [63.5, 3711.0], [63.6, 3711.0], [63.7, 3711.0], [63.8, 3711.0], [63.9, 3711.0], [64.0, 3718.0], [64.1, 3718.0], [64.2, 3718.0], [64.3, 3718.0], [64.4, 3718.0], [64.5, 3721.0], [64.6, 3721.0], [64.7, 3721.0], [64.8, 3721.0], [64.9, 3721.0], [65.0, 3735.0], [65.1, 3735.0], [65.2, 3735.0], [65.3, 3735.0], [65.4, 3735.0], [65.5, 3775.0], [65.6, 3775.0], [65.7, 3775.0], [65.8, 3775.0], [65.9, 3775.0], [66.0, 3776.0], [66.1, 3776.0], [66.2, 3776.0], [66.3, 3776.0], [66.4, 3776.0], [66.5, 3812.0], [66.6, 3812.0], [66.7, 3812.0], [66.8, 3812.0], [66.9, 3812.0], [67.0, 3816.0], [67.1, 3816.0], [67.2, 3816.0], [67.3, 3816.0], [67.4, 3816.0], [67.5, 3863.0], [67.6, 3863.0], [67.7, 3863.0], [67.8, 3863.0], [67.9, 3863.0], [68.0, 3918.0], [68.1, 3918.0], [68.2, 3918.0], [68.3, 3918.0], [68.4, 3918.0], [68.5, 3952.0], [68.6, 3952.0], [68.7, 3952.0], [68.8, 3952.0], [68.9, 3952.0], [69.0, 3966.0], [69.1, 3966.0], [69.2, 3966.0], [69.3, 3966.0], [69.4, 3966.0], [69.5, 3971.0], [69.6, 3971.0], [69.7, 3971.0], [69.8, 3971.0], [69.9, 3971.0], [70.0, 3980.0], [70.1, 3980.0], [70.2, 3980.0], [70.3, 3980.0], [70.4, 3980.0], [70.5, 3991.0], [70.6, 3991.0], [70.7, 3991.0], [70.8, 3991.0], [70.9, 3991.0], [71.0, 4010.0], [71.1, 4010.0], [71.2, 4010.0], [71.3, 4010.0], [71.4, 4010.0], [71.5, 4081.0], [71.6, 4081.0], [71.7, 4081.0], [71.8, 4081.0], [71.9, 4081.0], [72.0, 4096.0], [72.1, 4096.0], [72.2, 4096.0], [72.3, 4096.0], [72.4, 4096.0], [72.5, 4119.0], [72.6, 4119.0], [72.7, 4119.0], [72.8, 4119.0], [72.9, 4119.0], [73.0, 4132.0], [73.1, 4132.0], [73.2, 4132.0], [73.3, 4132.0], [73.4, 4132.0], [73.5, 4167.0], [73.6, 4167.0], [73.7, 4167.0], [73.8, 4167.0], [73.9, 4167.0], [74.0, 4254.0], [74.1, 4254.0], [74.2, 4254.0], [74.3, 4254.0], [74.4, 4254.0], [74.5, 4310.0], [74.6, 4310.0], [74.7, 4310.0], [74.8, 4310.0], [74.9, 4310.0], [75.0, 4329.0], [75.1, 4329.0], [75.2, 4329.0], [75.3, 4329.0], [75.4, 4329.0], [75.5, 4383.0], [75.6, 4383.0], [75.7, 4383.0], [75.8, 4383.0], [75.9, 4383.0], [76.0, 4420.0], [76.1, 4420.0], [76.2, 4420.0], [76.3, 4420.0], [76.4, 4420.0], [76.5, 4449.0], [76.6, 4449.0], [76.7, 4449.0], [76.8, 4449.0], [76.9, 4449.0], [77.0, 4483.0], [77.1, 4483.0], [77.2, 4483.0], [77.3, 4483.0], [77.4, 4483.0], [77.5, 4495.0], [77.6, 4495.0], [77.7, 4495.0], [77.8, 4495.0], [77.9, 4495.0], [78.0, 4511.0], [78.1, 4511.0], [78.2, 4511.0], [78.3, 4511.0], [78.4, 4511.0], [78.5, 4515.0], [78.6, 4515.0], [78.7, 4515.0], [78.8, 4515.0], [78.9, 4515.0], [79.0, 4516.0], [79.1, 4516.0], [79.2, 4516.0], [79.3, 4516.0], [79.4, 4516.0], [79.5, 4521.0], [79.6, 4521.0], [79.7, 4521.0], [79.8, 4521.0], [79.9, 4521.0], [80.0, 4545.0], [80.1, 4545.0], [80.2, 4545.0], [80.3, 4545.0], [80.4, 4545.0], [80.5, 4603.0], [80.6, 4603.0], [80.7, 4603.0], [80.8, 4603.0], [80.9, 4603.0], [81.0, 4642.0], [81.1, 4642.0], [81.2, 4642.0], [81.3, 4642.0], [81.4, 4642.0], [81.5, 4677.0], [81.6, 4677.0], [81.7, 4677.0], [81.8, 4677.0], [81.9, 4677.0], [82.0, 4692.0], [82.1, 4692.0], [82.2, 4692.0], [82.3, 4692.0], [82.4, 4692.0], [82.5, 4698.0], [82.6, 4698.0], [82.7, 4698.0], [82.8, 4698.0], [82.9, 4698.0], [83.0, 4764.0], [83.1, 4764.0], [83.2, 4764.0], [83.3, 4764.0], [83.4, 4764.0], [83.5, 4769.0], [83.6, 4769.0], [83.7, 4769.0], [83.8, 4769.0], [83.9, 4769.0], [84.0, 4770.0], [84.1, 4770.0], [84.2, 4770.0], [84.3, 4770.0], [84.4, 4770.0], [84.5, 5225.0], [84.6, 5225.0], [84.7, 5225.0], [84.8, 5225.0], [84.9, 5225.0], [85.0, 5258.0], [85.1, 5258.0], [85.2, 5258.0], [85.3, 5258.0], [85.4, 5258.0], [85.5, 5292.0], [85.6, 5292.0], [85.7, 5292.0], [85.8, 5292.0], [85.9, 5292.0], [86.0, 5410.0], [86.1, 5410.0], [86.2, 5410.0], [86.3, 5410.0], [86.4, 5410.0], [86.5, 5519.0], [86.6, 5519.0], [86.7, 5519.0], [86.8, 5519.0], [86.9, 5519.0], [87.0, 5600.0], [87.1, 5600.0], [87.2, 5600.0], [87.3, 5600.0], [87.4, 5600.0], [87.5, 5750.0], [87.6, 5750.0], [87.7, 5750.0], [87.8, 5750.0], [87.9, 5750.0], [88.0, 6057.0], [88.1, 6057.0], [88.2, 6057.0], [88.3, 6057.0], [88.4, 6057.0], [88.5, 6069.0], [88.6, 6069.0], [88.7, 6069.0], [88.8, 6069.0], [88.9, 6069.0], [89.0, 6668.0], [89.1, 6668.0], [89.2, 6668.0], [89.3, 6668.0], [89.4, 6668.0], [89.5, 6710.0], [89.6, 6710.0], [89.7, 6710.0], [89.8, 6710.0], [89.9, 6710.0], [90.0, 6765.0], [90.1, 6765.0], [90.2, 6765.0], [90.3, 6765.0], [90.4, 6765.0], [90.5, 6821.0], [90.6, 6821.0], [90.7, 6821.0], [90.8, 6821.0], [90.9, 6821.0], [91.0, 6867.0], [91.1, 6867.0], [91.2, 6867.0], [91.3, 6867.0], [91.4, 6867.0], [91.5, 7160.0], [91.6, 7160.0], [91.7, 7160.0], [91.8, 7160.0], [91.9, 7160.0], [92.0, 7328.0], [92.1, 7328.0], [92.2, 7328.0], [92.3, 7328.0], [92.4, 7328.0], [92.5, 7387.0], [92.6, 7387.0], [92.7, 7387.0], [92.8, 7387.0], [92.9, 7387.0], [93.0, 7570.0], [93.1, 7570.0], [93.2, 7570.0], [93.3, 7570.0], [93.4, 7570.0], [93.5, 7612.0], [93.6, 7612.0], [93.7, 7612.0], [93.8, 7612.0], [93.9, 7612.0], [94.0, 7681.0], [94.1, 7681.0], [94.2, 7681.0], [94.3, 7681.0], [94.4, 7681.0], [94.5, 7792.0], [94.6, 7792.0], [94.7, 7792.0], [94.8, 7792.0], [94.9, 7792.0], [95.0, 8158.0], [95.1, 8158.0], [95.2, 8158.0], [95.3, 8158.0], [95.4, 8158.0], [95.5, 8184.0], [95.6, 8184.0], [95.7, 8184.0], [95.8, 8184.0], [95.9, 8184.0], [96.0, 8204.0], [96.1, 8204.0], [96.2, 8204.0], [96.3, 8204.0], [96.4, 8204.0], [96.5, 9013.0], [96.6, 9013.0], [96.7, 9013.0], [96.8, 9013.0], [96.9, 9013.0], [97.0, 9721.0], [97.1, 9721.0], [97.2, 9721.0], [97.3, 9721.0], [97.4, 9721.0], [97.5, 10968.0], [97.6, 10968.0], [97.7, 10968.0], [97.8, 10968.0], [97.9, 10968.0], [98.0, 11682.0], [98.1, 11682.0], [98.2, 11682.0], [98.3, 11682.0], [98.4, 11682.0], [98.5, 11878.0], [98.6, 11878.0], [98.7, 11878.0], [98.8, 11878.0], [98.9, 11878.0], [99.0, 12397.0], [99.1, 12397.0], [99.2, 12397.0], [99.3, 12397.0], [99.4, 12397.0], [99.5, 13004.0], [99.6, 13004.0], [99.7, 13004.0], [99.8, 13004.0], [99.9, 13004.0]], "isOverall": false, "label": "List_User", "isController": false}, {"data": [[0.0, 628.0], [0.1, 628.0], [0.2, 628.0], [0.3, 628.0], [0.4, 628.0], [0.5, 629.0], [0.6, 629.0], [0.7, 629.0], [0.8, 629.0], [0.9, 629.0], [1.0, 633.0], [1.1, 633.0], [1.2, 633.0], [1.3, 633.0], [1.4, 633.0], [1.5, 635.0], [1.6, 635.0], [1.7, 635.0], [1.8, 635.0], [1.9, 635.0], [2.0, 709.0], [2.1, 709.0], [2.2, 709.0], [2.3, 709.0], [2.4, 709.0], [2.5, 761.0], [2.6, 761.0], [2.7, 761.0], [2.8, 761.0], [2.9, 761.0], [3.0, 787.0], [3.1, 787.0], [3.2, 787.0], [3.3, 787.0], [3.4, 787.0], [3.5, 808.0], [3.6, 808.0], [3.7, 808.0], [3.8, 808.0], [3.9, 808.0], [4.0, 846.0], [4.1, 846.0], [4.2, 846.0], [4.3, 846.0], [4.4, 846.0], [4.5, 863.0], [4.6, 863.0], [4.7, 863.0], [4.8, 863.0], [4.9, 863.0], [5.0, 887.0], [5.1, 887.0], [5.2, 887.0], [5.3, 887.0], [5.4, 887.0], [5.5, 937.0], [5.6, 937.0], [5.7, 937.0], [5.8, 937.0], [5.9, 937.0], [6.0, 952.0], [6.1, 952.0], [6.2, 952.0], [6.3, 952.0], [6.4, 952.0], [6.5, 964.0], [6.6, 964.0], [6.7, 964.0], [6.8, 964.0], [6.9, 964.0], [7.0, 995.0], [7.1, 995.0], [7.2, 995.0], [7.3, 995.0], [7.4, 995.0], [7.5, 1007.0], [7.6, 1007.0], [7.7, 1007.0], [7.8, 1007.0], [7.9, 1007.0], [8.0, 1040.0], [8.1, 1040.0], [8.2, 1040.0], [8.3, 1040.0], [8.4, 1040.0], [8.5, 1044.0], [8.6, 1044.0], [8.7, 1044.0], [8.8, 1044.0], [8.9, 1044.0], [9.0, 1051.0], [9.1, 1051.0], [9.2, 1051.0], [9.3, 1051.0], [9.4, 1051.0], [9.5, 1064.0], [9.6, 1064.0], [9.7, 1064.0], [9.8, 1064.0], [9.9, 1064.0], [10.0, 1086.0], [10.1, 1086.0], [10.2, 1086.0], [10.3, 1086.0], [10.4, 1086.0], [10.5, 1100.0], [10.6, 1100.0], [10.7, 1100.0], [10.8, 1100.0], [10.9, 1100.0], [11.0, 1130.0], [11.1, 1130.0], [11.2, 1130.0], [11.3, 1130.0], [11.4, 1130.0], [11.5, 1132.0], [11.6, 1132.0], [11.7, 1132.0], [11.8, 1132.0], [11.9, 1132.0], [12.0, 1158.0], [12.1, 1158.0], [12.2, 1158.0], [12.3, 1158.0], [12.4, 1158.0], [12.5, 1181.0], [12.6, 1181.0], [12.7, 1181.0], [12.8, 1181.0], [12.9, 1181.0], [13.0, 1192.0], [13.1, 1192.0], [13.2, 1192.0], [13.3, 1192.0], [13.4, 1192.0], [13.5, 1205.0], [13.6, 1205.0], [13.7, 1205.0], [13.8, 1205.0], [13.9, 1205.0], [14.0, 1206.0], [14.1, 1206.0], [14.2, 1206.0], [14.3, 1206.0], [14.4, 1206.0], [14.5, 1222.0], [14.6, 1222.0], [14.7, 1222.0], [14.8, 1222.0], [14.9, 1222.0], [15.0, 1229.0], [15.1, 1229.0], [15.2, 1229.0], [15.3, 1229.0], [15.4, 1229.0], [15.5, 1236.0], [15.6, 1236.0], [15.7, 1236.0], [15.8, 1236.0], [15.9, 1236.0], [16.0, 1251.0], [16.1, 1251.0], [16.2, 1251.0], [16.3, 1251.0], [16.4, 1251.0], [16.5, 1254.0], [16.6, 1254.0], [16.7, 1254.0], [16.8, 1254.0], [16.9, 1254.0], [17.0, 1260.0], [17.1, 1260.0], [17.2, 1260.0], [17.3, 1260.0], [17.4, 1260.0], [17.5, 1261.0], [17.6, 1261.0], [17.7, 1261.0], [17.8, 1261.0], [17.9, 1261.0], [18.0, 1304.0], [18.1, 1304.0], [18.2, 1304.0], [18.3, 1304.0], [18.4, 1304.0], [18.5, 1346.0], [18.6, 1346.0], [18.7, 1346.0], [18.8, 1346.0], [18.9, 1346.0], [19.0, 1376.0], [19.1, 1376.0], [19.2, 1376.0], [19.3, 1376.0], [19.4, 1376.0], [19.5, 1382.0], [19.6, 1382.0], [19.7, 1382.0], [19.8, 1382.0], [19.9, 1382.0], [20.0, 1384.0], [20.1, 1384.0], [20.2, 1384.0], [20.3, 1384.0], [20.4, 1384.0], [20.5, 1400.0], [20.6, 1400.0], [20.7, 1400.0], [20.8, 1400.0], [20.9, 1400.0], [21.0, 1450.0], [21.1, 1450.0], [21.2, 1450.0], [21.3, 1450.0], [21.4, 1450.0], [21.5, 1459.0], [21.6, 1459.0], [21.7, 1459.0], [21.8, 1459.0], [21.9, 1459.0], [22.0, 1460.0], [22.1, 1460.0], [22.2, 1460.0], [22.3, 1460.0], [22.4, 1460.0], [22.5, 1461.0], [22.6, 1461.0], [22.7, 1461.0], [22.8, 1461.0], [22.9, 1461.0], [23.0, 1546.0], [23.1, 1546.0], [23.2, 1546.0], [23.3, 1546.0], [23.4, 1546.0], [23.5, 1653.0], [23.6, 1653.0], [23.7, 1653.0], [23.8, 1653.0], [23.9, 1653.0], [24.0, 1708.0], [24.1, 1708.0], [24.2, 1708.0], [24.3, 1708.0], [24.4, 1708.0], [24.5, 1729.0], [24.6, 1729.0], [24.7, 1729.0], [24.8, 1729.0], [24.9, 1729.0], [25.0, 1796.0], [25.1, 1796.0], [25.2, 1796.0], [25.3, 1796.0], [25.4, 1796.0], [25.5, 1809.0], [25.6, 1809.0], [25.7, 1809.0], [25.8, 1809.0], [25.9, 1809.0], [26.0, 1811.0], [26.1, 1811.0], [26.2, 1811.0], [26.3, 1811.0], [26.4, 1811.0], [26.5, 1811.0], [26.6, 1811.0], [26.7, 1811.0], [26.8, 1811.0], [26.9, 1811.0], [27.0, 1856.0], [27.1, 1856.0], [27.2, 1856.0], [27.3, 1856.0], [27.4, 1856.0], [27.5, 1857.0], [27.6, 1857.0], [27.7, 1857.0], [27.8, 1857.0], [27.9, 1857.0], [28.0, 1962.0], [28.1, 1962.0], [28.2, 1962.0], [28.3, 1962.0], [28.4, 1962.0], [28.5, 2031.0], [28.6, 2031.0], [28.7, 2031.0], [28.8, 2031.0], [28.9, 2031.0], [29.0, 2046.0], [29.1, 2046.0], [29.2, 2046.0], [29.3, 2046.0], [29.4, 2046.0], [29.5, 2185.0], [29.6, 2185.0], [29.7, 2185.0], [29.8, 2185.0], [29.9, 2185.0], [30.0, 2274.0], [30.1, 2274.0], [30.2, 2274.0], [30.3, 2274.0], [30.4, 2274.0], [30.5, 2304.0], [30.6, 2304.0], [30.7, 2304.0], [30.8, 2304.0], [30.9, 2304.0], [31.0, 2305.0], [31.1, 2305.0], [31.2, 2305.0], [31.3, 2305.0], [31.4, 2305.0], [31.5, 2320.0], [31.6, 2320.0], [31.7, 2320.0], [31.8, 2320.0], [31.9, 2320.0], [32.0, 2380.0], [32.1, 2380.0], [32.2, 2380.0], [32.3, 2380.0], [32.4, 2380.0], [32.5, 2484.0], [32.6, 2484.0], [32.7, 2484.0], [32.8, 2484.0], [32.9, 2484.0], [33.0, 2489.0], [33.1, 2489.0], [33.2, 2489.0], [33.3, 2489.0], [33.4, 2489.0], [33.5, 2522.0], [33.6, 2522.0], [33.7, 2522.0], [33.8, 2522.0], [33.9, 2522.0], [34.0, 2686.0], [34.1, 2686.0], [34.2, 2686.0], [34.3, 2686.0], [34.4, 2686.0], [34.5, 2851.0], [34.6, 2851.0], [34.7, 2851.0], [34.8, 2851.0], [34.9, 2851.0], [35.0, 2852.0], [35.1, 2852.0], [35.2, 2852.0], [35.3, 2852.0], [35.4, 2852.0], [35.5, 2867.0], [35.6, 2867.0], [35.7, 2867.0], [35.8, 2867.0], [35.9, 2867.0], [36.0, 2869.0], [36.1, 2869.0], [36.2, 2869.0], [36.3, 2869.0], [36.4, 2869.0], [36.5, 2931.0], [36.6, 2931.0], [36.7, 2931.0], [36.8, 2931.0], [36.9, 2931.0], [37.0, 2953.0], [37.1, 2953.0], [37.2, 2953.0], [37.3, 2953.0], [37.4, 2953.0], [37.5, 2989.0], [37.6, 2989.0], [37.7, 2989.0], [37.8, 2989.0], [37.9, 2989.0], [38.0, 3016.0], [38.1, 3016.0], [38.2, 3016.0], [38.3, 3016.0], [38.4, 3016.0], [38.5, 3064.0], [38.6, 3064.0], [38.7, 3064.0], [38.8, 3064.0], [38.9, 3064.0], [39.0, 3173.0], [39.1, 3173.0], [39.2, 3173.0], [39.3, 3173.0], [39.4, 3173.0], [39.5, 3226.0], [39.6, 3226.0], [39.7, 3226.0], [39.8, 3226.0], [39.9, 3226.0], [40.0, 3323.0], [40.1, 3323.0], [40.2, 3323.0], [40.3, 3323.0], [40.4, 3323.0], [40.5, 3432.0], [40.6, 3432.0], [40.7, 3432.0], [40.8, 3432.0], [40.9, 3432.0], [41.0, 3474.0], [41.1, 3474.0], [41.2, 3474.0], [41.3, 3474.0], [41.4, 3474.0], [41.5, 3485.0], [41.6, 3485.0], [41.7, 3485.0], [41.8, 3485.0], [41.9, 3485.0], [42.0, 3499.0], [42.1, 3499.0], [42.2, 3499.0], [42.3, 3499.0], [42.4, 3499.0], [42.5, 3515.0], [42.6, 3515.0], [42.7, 3515.0], [42.8, 3515.0], [42.9, 3515.0], [43.0, 3539.0], [43.1, 3539.0], [43.2, 3539.0], [43.3, 3539.0], [43.4, 3539.0], [43.5, 3571.0], [43.6, 3571.0], [43.7, 3571.0], [43.8, 3571.0], [43.9, 3571.0], [44.0, 3649.0], [44.1, 3649.0], [44.2, 3649.0], [44.3, 3649.0], [44.4, 3649.0], [44.5, 3669.0], [44.6, 3669.0], [44.7, 3669.0], [44.8, 3669.0], [44.9, 3669.0], [45.0, 3725.0], [45.1, 3725.0], [45.2, 3725.0], [45.3, 3725.0], [45.4, 3725.0], [45.5, 3744.0], [45.6, 3744.0], [45.7, 3744.0], [45.8, 3744.0], [45.9, 3744.0], [46.0, 3746.0], [46.1, 3746.0], [46.2, 3746.0], [46.3, 3746.0], [46.4, 3746.0], [46.5, 3784.0], [46.6, 3784.0], [46.7, 3784.0], [46.8, 3784.0], [46.9, 3784.0], [47.0, 3854.0], [47.1, 3854.0], [47.2, 3854.0], [47.3, 3854.0], [47.4, 3854.0], [47.5, 3854.0], [47.6, 3854.0], [47.7, 3854.0], [47.8, 3854.0], [47.9, 3854.0], [48.0, 3954.0], [48.1, 3954.0], [48.2, 3954.0], [48.3, 3954.0], [48.4, 3954.0], [48.5, 3968.0], [48.6, 3968.0], [48.7, 3968.0], [48.8, 3968.0], [48.9, 3968.0], [49.0, 3990.0], [49.1, 3990.0], [49.2, 3990.0], [49.3, 3990.0], [49.4, 3990.0], [49.5, 4000.0], [49.6, 4000.0], [49.7, 4000.0], [49.8, 4000.0], [49.9, 4000.0], [50.0, 4025.0], [50.1, 4025.0], [50.2, 4025.0], [50.3, 4025.0], [50.4, 4025.0], [50.5, 4066.0], [50.6, 4066.0], [50.7, 4066.0], [50.8, 4066.0], [50.9, 4066.0], [51.0, 4079.0], [51.1, 4079.0], [51.2, 4079.0], [51.3, 4079.0], [51.4, 4079.0], [51.5, 4099.0], [51.6, 4099.0], [51.7, 4099.0], [51.8, 4099.0], [51.9, 4099.0], [52.0, 4125.0], [52.1, 4125.0], [52.2, 4125.0], [52.3, 4125.0], [52.4, 4125.0], [52.5, 4162.0], [52.6, 4162.0], [52.7, 4162.0], [52.8, 4162.0], [52.9, 4162.0], [53.0, 4213.0], [53.1, 4213.0], [53.2, 4213.0], [53.3, 4213.0], [53.4, 4213.0], [53.5, 4228.0], [53.6, 4228.0], [53.7, 4228.0], [53.8, 4228.0], [53.9, 4228.0], [54.0, 4260.0], [54.1, 4260.0], [54.2, 4260.0], [54.3, 4260.0], [54.4, 4260.0], [54.5, 4312.0], [54.6, 4312.0], [54.7, 4312.0], [54.8, 4312.0], [54.9, 4312.0], [55.0, 4358.0], [55.1, 4358.0], [55.2, 4358.0], [55.3, 4358.0], [55.4, 4358.0], [55.5, 4467.0], [55.6, 4467.0], [55.7, 4467.0], [55.8, 4467.0], [55.9, 4467.0], [56.0, 4677.0], [56.1, 4677.0], [56.2, 4677.0], [56.3, 4677.0], [56.4, 4677.0], [56.5, 4849.0], [56.6, 4849.0], [56.7, 4849.0], [56.8, 4849.0], [56.9, 4849.0], [57.0, 4858.0], [57.1, 4858.0], [57.2, 4858.0], [57.3, 4858.0], [57.4, 4858.0], [57.5, 5037.0], [57.6, 5037.0], [57.7, 5037.0], [57.8, 5037.0], [57.9, 5037.0], [58.0, 5072.0], [58.1, 5072.0], [58.2, 5072.0], [58.3, 5072.0], [58.4, 5072.0], [58.5, 5141.0], [58.6, 5141.0], [58.7, 5141.0], [58.8, 5141.0], [58.9, 5141.0], [59.0, 5150.0], [59.1, 5150.0], [59.2, 5150.0], [59.3, 5150.0], [59.4, 5150.0], [59.5, 5170.0], [59.6, 5170.0], [59.7, 5170.0], [59.8, 5170.0], [59.9, 5170.0], [60.0, 5209.0], [60.1, 5209.0], [60.2, 5209.0], [60.3, 5209.0], [60.4, 5209.0], [60.5, 5328.0], [60.6, 5328.0], [60.7, 5328.0], [60.8, 5328.0], [60.9, 5328.0], [61.0, 5391.0], [61.1, 5391.0], [61.2, 5391.0], [61.3, 5391.0], [61.4, 5391.0], [61.5, 5539.0], [61.6, 5539.0], [61.7, 5539.0], [61.8, 5539.0], [61.9, 5539.0], [62.0, 5592.0], [62.1, 5592.0], [62.2, 5592.0], [62.3, 5592.0], [62.4, 5592.0], [62.5, 5598.0], [62.6, 5598.0], [62.7, 5598.0], [62.8, 5598.0], [62.9, 5598.0], [63.0, 5610.0], [63.1, 5610.0], [63.2, 5610.0], [63.3, 5610.0], [63.4, 5610.0], [63.5, 6078.0], [63.6, 6078.0], [63.7, 6078.0], [63.8, 6078.0], [63.9, 6078.0], [64.0, 6131.0], [64.1, 6131.0], [64.2, 6131.0], [64.3, 6131.0], [64.4, 6131.0], [64.5, 6198.0], [64.6, 6198.0], [64.7, 6198.0], [64.8, 6198.0], [64.9, 6198.0], [65.0, 6266.0], [65.1, 6266.0], [65.2, 6266.0], [65.3, 6266.0], [65.4, 6266.0], [65.5, 6391.0], [65.6, 6391.0], [65.7, 6391.0], [65.8, 6391.0], [65.9, 6391.0], [66.0, 6413.0], [66.1, 6413.0], [66.2, 6413.0], [66.3, 6413.0], [66.4, 6413.0], [66.5, 6424.0], [66.6, 6424.0], [66.7, 6424.0], [66.8, 6424.0], [66.9, 6424.0], [67.0, 6452.0], [67.1, 6452.0], [67.2, 6452.0], [67.3, 6452.0], [67.4, 6452.0], [67.5, 6459.0], [67.6, 6459.0], [67.7, 6459.0], [67.8, 6459.0], [67.9, 6459.0], [68.0, 6502.0], [68.1, 6502.0], [68.2, 6502.0], [68.3, 6502.0], [68.4, 6502.0], [68.5, 6538.0], [68.6, 6538.0], [68.7, 6538.0], [68.8, 6538.0], [68.9, 6538.0], [69.0, 6750.0], [69.1, 6750.0], [69.2, 6750.0], [69.3, 6750.0], [69.4, 6750.0], [69.5, 6857.0], [69.6, 6857.0], [69.7, 6857.0], [69.8, 6857.0], [69.9, 6857.0], [70.0, 6972.0], [70.1, 6972.0], [70.2, 6972.0], [70.3, 6972.0], [70.4, 6972.0], [70.5, 7465.0], [70.6, 7465.0], [70.7, 7465.0], [70.8, 7465.0], [70.9, 7465.0], [71.0, 8607.0], [71.1, 8607.0], [71.2, 8607.0], [71.3, 8607.0], [71.4, 8607.0], [71.5, 9031.0], [71.6, 9031.0], [71.7, 9031.0], [71.8, 9031.0], [71.9, 9031.0], [72.0, 9238.0], [72.1, 9238.0], [72.2, 9238.0], [72.3, 9238.0], [72.4, 9238.0], [72.5, 9519.0], [72.6, 9519.0], [72.7, 9519.0], [72.8, 9519.0], [72.9, 9519.0], [73.0, 9751.0], [73.1, 9751.0], [73.2, 9751.0], [73.3, 9751.0], [73.4, 9751.0], [73.5, 9880.0], [73.6, 9880.0], [73.7, 9880.0], [73.8, 9880.0], [73.9, 9880.0], [74.0, 10005.0], [74.1, 10005.0], [74.2, 10005.0], [74.3, 10005.0], [74.4, 10005.0], [74.5, 10104.0], [74.6, 10104.0], [74.7, 10104.0], [74.8, 10104.0], [74.9, 10104.0], [75.0, 10165.0], [75.1, 10165.0], [75.2, 10165.0], [75.3, 10165.0], [75.4, 10165.0], [75.5, 10286.0], [75.6, 10286.0], [75.7, 10286.0], [75.8, 10286.0], [75.9, 10286.0], [76.0, 10303.0], [76.1, 10303.0], [76.2, 10303.0], [76.3, 10303.0], [76.4, 10303.0], [76.5, 10347.0], [76.6, 10347.0], [76.7, 10347.0], [76.8, 10347.0], [76.9, 10347.0], [77.0, 10585.0], [77.1, 10585.0], [77.2, 10585.0], [77.3, 10585.0], [77.4, 10585.0], [77.5, 10686.0], [77.6, 10686.0], [77.7, 10686.0], [77.8, 10686.0], [77.9, 10686.0], [78.0, 10756.0], [78.1, 10756.0], [78.2, 10756.0], [78.3, 10756.0], [78.4, 10756.0], [78.5, 10763.0], [78.6, 10763.0], [78.7, 10763.0], [78.8, 10763.0], [78.9, 10763.0], [79.0, 10810.0], [79.1, 10810.0], [79.2, 10810.0], [79.3, 10810.0], [79.4, 10810.0], [79.5, 11072.0], [79.6, 11072.0], [79.7, 11072.0], [79.8, 11072.0], [79.9, 11072.0], [80.0, 11262.0], [80.1, 11262.0], [80.2, 11262.0], [80.3, 11262.0], [80.4, 11262.0], [80.5, 11468.0], [80.6, 11468.0], [80.7, 11468.0], [80.8, 11468.0], [80.9, 11468.0], [81.0, 11693.0], [81.1, 11693.0], [81.2, 11693.0], [81.3, 11693.0], [81.4, 11693.0], [81.5, 12049.0], [81.6, 12049.0], [81.7, 12049.0], [81.8, 12049.0], [81.9, 12049.0], [82.0, 12146.0], [82.1, 12146.0], [82.2, 12146.0], [82.3, 12146.0], [82.4, 12146.0], [82.5, 12163.0], [82.6, 12163.0], [82.7, 12163.0], [82.8, 12163.0], [82.9, 12163.0], [83.0, 13096.0], [83.1, 13096.0], [83.2, 13096.0], [83.3, 13096.0], [83.4, 13096.0], [83.5, 14251.0], [83.6, 14251.0], [83.7, 14251.0], [83.8, 14251.0], [83.9, 14251.0], [84.0, 14313.0], [84.1, 14313.0], [84.2, 14313.0], [84.3, 14313.0], [84.4, 14313.0], [84.5, 14827.0], [84.6, 14827.0], [84.7, 14827.0], [84.8, 14827.0], [84.9, 14827.0], [85.0, 15586.0], [85.1, 15586.0], [85.2, 15586.0], [85.3, 15586.0], [85.4, 15586.0], [85.5, 15676.0], [85.6, 15676.0], [85.7, 15676.0], [85.8, 15676.0], [85.9, 15676.0], [86.0, 15688.0], [86.1, 15688.0], [86.2, 15688.0], [86.3, 15688.0], [86.4, 15688.0], [86.5, 15732.0], [86.6, 15732.0], [86.7, 15732.0], [86.8, 15732.0], [86.9, 15732.0], [87.0, 15736.0], [87.1, 15736.0], [87.2, 15736.0], [87.3, 15736.0], [87.4, 15736.0], [87.5, 15799.0], [87.6, 15799.0], [87.7, 15799.0], [87.8, 15799.0], [87.9, 15799.0], [88.0, 15810.0], [88.1, 15810.0], [88.2, 15810.0], [88.3, 15810.0], [88.4, 15810.0], [88.5, 15849.0], [88.6, 15849.0], [88.7, 15849.0], [88.8, 15849.0], [88.9, 15849.0], [89.0, 15857.0], [89.1, 15857.0], [89.2, 15857.0], [89.3, 15857.0], [89.4, 15857.0], [89.5, 15873.0], [89.6, 15873.0], [89.7, 15873.0], [89.8, 15873.0], [89.9, 15873.0], [90.0, 15969.0], [90.1, 15969.0], [90.2, 15969.0], [90.3, 15969.0], [90.4, 15969.0], [90.5, 15983.0], [90.6, 15983.0], [90.7, 15983.0], [90.8, 15983.0], [90.9, 15983.0], [91.0, 16146.0], [91.1, 16146.0], [91.2, 16146.0], [91.3, 16146.0], [91.4, 16146.0], [91.5, 16149.0], [91.6, 16149.0], [91.7, 16149.0], [91.8, 16149.0], [91.9, 16149.0], [92.0, 16556.0], [92.1, 16556.0], [92.2, 16556.0], [92.3, 16556.0], [92.4, 16556.0], [92.5, 16580.0], [92.6, 16580.0], [92.7, 16580.0], [92.8, 16580.0], [92.9, 16580.0], [93.0, 16656.0], [93.1, 16656.0], [93.2, 16656.0], [93.3, 16656.0], [93.4, 16656.0], [93.5, 16684.0], [93.6, 16684.0], [93.7, 16684.0], [93.8, 16684.0], [93.9, 16684.0], [94.0, 16722.0], [94.1, 16722.0], [94.2, 16722.0], [94.3, 16722.0], [94.4, 16722.0], [94.5, 16746.0], [94.6, 16746.0], [94.7, 16746.0], [94.8, 16746.0], [94.9, 16746.0], [95.0, 16758.0], [95.1, 16758.0], [95.2, 16758.0], [95.3, 16758.0], [95.4, 16758.0], [95.5, 16853.0], [95.6, 16853.0], [95.7, 16853.0], [95.8, 16853.0], [95.9, 16853.0], [96.0, 16927.0], [96.1, 16927.0], [96.2, 16927.0], [96.3, 16927.0], [96.4, 16927.0], [96.5, 16962.0], [96.6, 16962.0], [96.7, 16962.0], [96.8, 16962.0], [96.9, 16962.0], [97.0, 17143.0], [97.1, 17143.0], [97.2, 17143.0], [97.3, 17143.0], [97.4, 17143.0], [97.5, 17236.0], [97.6, 17236.0], [97.7, 17236.0], [97.8, 17236.0], [97.9, 17236.0], [98.0, 17759.0], [98.1, 17759.0], [98.2, 17759.0], [98.3, 17759.0], [98.4, 17759.0], [98.5, 19051.0], [98.6, 19051.0], [98.7, 19051.0], [98.8, 19051.0], [98.9, 19051.0], [99.0, 22313.0], [99.1, 22313.0], [99.2, 22313.0], [99.3, 22313.0], [99.4, 22313.0], [99.5, 37463.0], [99.6, 37463.0], [99.7, 37463.0], [99.8, 37463.0], [99.9, 37463.0]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 10.0], [0.3, 10.0], [0.4, 10.0], [0.5, 11.0], [0.6, 11.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 15.0], [2.1, 15.0], [2.2, 15.0], [2.3, 15.0], [2.4, 15.0], [2.5, 15.0], [2.6, 15.0], [2.7, 15.0], [2.8, 15.0], [2.9, 15.0], [3.0, 15.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 15.0], [3.5, 16.0], [3.6, 16.0], [3.7, 16.0], [3.8, 16.0], [3.9, 16.0], [4.0, 16.0], [4.1, 16.0], [4.2, 16.0], [4.3, 16.0], [4.4, 16.0], [4.5, 16.0], [4.6, 16.0], [4.7, 16.0], [4.8, 16.0], [4.9, 16.0], [5.0, 16.0], [5.1, 16.0], [5.2, 16.0], [5.3, 16.0], [5.4, 16.0], [5.5, 17.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 17.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 17.0], [6.5, 17.0], [6.6, 17.0], [6.7, 17.0], [6.8, 17.0], [6.9, 17.0], [7.0, 18.0], [7.1, 18.0], [7.2, 18.0], [7.3, 18.0], [7.4, 18.0], [7.5, 18.0], [7.6, 18.0], [7.7, 18.0], [7.8, 18.0], [7.9, 18.0], [8.0, 18.0], [8.1, 18.0], [8.2, 18.0], [8.3, 18.0], [8.4, 18.0], [8.5, 19.0], [8.6, 19.0], [8.7, 19.0], [8.8, 19.0], [8.9, 19.0], [9.0, 19.0], [9.1, 19.0], [9.2, 19.0], [9.3, 19.0], [9.4, 19.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 20.0], [10.0, 20.0], [10.1, 20.0], [10.2, 20.0], [10.3, 20.0], [10.4, 20.0], [10.5, 20.0], [10.6, 20.0], [10.7, 20.0], [10.8, 20.0], [10.9, 20.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 20.0], [11.4, 20.0], [11.5, 21.0], [11.6, 21.0], [11.7, 21.0], [11.8, 21.0], [11.9, 21.0], [12.0, 21.0], [12.1, 21.0], [12.2, 21.0], [12.3, 21.0], [12.4, 21.0], [12.5, 21.0], [12.6, 21.0], [12.7, 21.0], [12.8, 21.0], [12.9, 21.0], [13.0, 21.0], [13.1, 21.0], [13.2, 21.0], [13.3, 21.0], [13.4, 21.0], [13.5, 21.0], [13.6, 21.0], [13.7, 21.0], [13.8, 21.0], [13.9, 21.0], [14.0, 21.0], [14.1, 21.0], [14.2, 21.0], [14.3, 21.0], [14.4, 21.0], [14.5, 22.0], [14.6, 22.0], [14.7, 22.0], [14.8, 22.0], [14.9, 22.0], [15.0, 22.0], [15.1, 22.0], [15.2, 22.0], [15.3, 22.0], [15.4, 22.0], [15.5, 22.0], [15.6, 22.0], [15.7, 22.0], [15.8, 22.0], [15.9, 22.0], [16.0, 22.0], [16.1, 22.0], [16.2, 22.0], [16.3, 22.0], [16.4, 22.0], [16.5, 23.0], [16.6, 23.0], [16.7, 23.0], [16.8, 23.0], [16.9, 23.0], [17.0, 23.0], [17.1, 23.0], [17.2, 23.0], [17.3, 23.0], [17.4, 23.0], [17.5, 23.0], [17.6, 23.0], [17.7, 23.0], [17.8, 23.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 23.0], [18.5, 23.0], [18.6, 23.0], [18.7, 23.0], [18.8, 23.0], [18.9, 23.0], [19.0, 23.0], [19.1, 23.0], [19.2, 23.0], [19.3, 23.0], [19.4, 23.0], [19.5, 24.0], [19.6, 24.0], [19.7, 24.0], [19.8, 24.0], [19.9, 24.0], [20.0, 24.0], [20.1, 24.0], [20.2, 24.0], [20.3, 24.0], [20.4, 24.0], [20.5, 24.0], [20.6, 24.0], [20.7, 24.0], [20.8, 24.0], [20.9, 24.0], [21.0, 24.0], [21.1, 24.0], [21.2, 24.0], [21.3, 24.0], [21.4, 24.0], [21.5, 24.0], [21.6, 24.0], [21.7, 24.0], [21.8, 24.0], [21.9, 24.0], [22.0, 24.0], [22.1, 24.0], [22.2, 24.0], [22.3, 24.0], [22.4, 24.0], [22.5, 24.0], [22.6, 24.0], [22.7, 24.0], [22.8, 24.0], [22.9, 24.0], [23.0, 24.0], [23.1, 24.0], [23.2, 24.0], [23.3, 24.0], [23.4, 24.0], [23.5, 24.0], [23.6, 24.0], [23.7, 24.0], [23.8, 24.0], [23.9, 24.0], [24.0, 25.0], [24.1, 25.0], [24.2, 25.0], [24.3, 25.0], [24.4, 25.0], [24.5, 25.0], [24.6, 25.0], [24.7, 25.0], [24.8, 25.0], [24.9, 25.0], [25.0, 25.0], [25.1, 25.0], [25.2, 25.0], [25.3, 25.0], [25.4, 25.0], [25.5, 25.0], [25.6, 25.0], [25.7, 25.0], [25.8, 25.0], [25.9, 25.0], [26.0, 25.0], [26.1, 25.0], [26.2, 25.0], [26.3, 25.0], [26.4, 25.0], [26.5, 25.0], [26.6, 25.0], [26.7, 25.0], [26.8, 25.0], [26.9, 25.0], [27.0, 25.0], [27.1, 25.0], [27.2, 25.0], [27.3, 25.0], [27.4, 25.0], [27.5, 25.0], [27.6, 25.0], [27.7, 25.0], [27.8, 25.0], [27.9, 25.0], [28.0, 25.0], [28.1, 25.0], [28.2, 25.0], [28.3, 25.0], [28.4, 25.0], [28.5, 25.0], [28.6, 25.0], [28.7, 25.0], [28.8, 25.0], [28.9, 25.0], [29.0, 26.0], [29.1, 26.0], [29.2, 26.0], [29.3, 26.0], [29.4, 26.0], [29.5, 26.0], [29.6, 26.0], [29.7, 26.0], [29.8, 26.0], [29.9, 26.0], [30.0, 26.0], [30.1, 26.0], [30.2, 26.0], [30.3, 26.0], [30.4, 26.0], [30.5, 26.0], [30.6, 26.0], [30.7, 26.0], [30.8, 26.0], [30.9, 26.0], [31.0, 26.0], [31.1, 26.0], [31.2, 26.0], [31.3, 26.0], [31.4, 26.0], [31.5, 26.0], [31.6, 26.0], [31.7, 26.0], [31.8, 26.0], [31.9, 26.0], [32.0, 26.0], [32.1, 26.0], [32.2, 26.0], [32.3, 26.0], [32.4, 26.0], [32.5, 26.0], [32.6, 26.0], [32.7, 26.0], [32.8, 26.0], [32.9, 26.0], [33.0, 26.0], [33.1, 26.0], [33.2, 26.0], [33.3, 26.0], [33.4, 26.0], [33.5, 27.0], [33.6, 27.0], [33.7, 27.0], [33.8, 27.0], [33.9, 27.0], [34.0, 27.0], [34.1, 27.0], [34.2, 27.0], [34.3, 27.0], [34.4, 27.0], [34.5, 27.0], [34.6, 27.0], [34.7, 27.0], [34.8, 27.0], [34.9, 27.0], [35.0, 28.0], [35.1, 28.0], [35.2, 28.0], [35.3, 28.0], [35.4, 28.0], [35.5, 28.0], [35.6, 28.0], [35.7, 28.0], [35.8, 28.0], [35.9, 28.0], [36.0, 28.0], [36.1, 28.0], [36.2, 28.0], [36.3, 28.0], [36.4, 28.0], [36.5, 29.0], [36.6, 29.0], [36.7, 29.0], [36.8, 29.0], [36.9, 29.0], [37.0, 29.0], [37.1, 29.0], [37.2, 29.0], [37.3, 29.0], [37.4, 29.0], [37.5, 29.0], [37.6, 29.0], [37.7, 29.0], [37.8, 29.0], [37.9, 29.0], [38.0, 29.0], [38.1, 29.0], [38.2, 29.0], [38.3, 29.0], [38.4, 29.0], [38.5, 29.0], [38.6, 29.0], [38.7, 29.0], [38.8, 29.0], [38.9, 29.0], [39.0, 29.0], [39.1, 29.0], [39.2, 29.0], [39.3, 29.0], [39.4, 29.0], [39.5, 30.0], [39.6, 30.0], [39.7, 30.0], [39.8, 30.0], [39.9, 30.0], [40.0, 30.0], [40.1, 30.0], [40.2, 30.0], [40.3, 30.0], [40.4, 30.0], [40.5, 30.0], [40.6, 30.0], [40.7, 30.0], [40.8, 30.0], [40.9, 30.0], [41.0, 30.0], [41.1, 30.0], [41.2, 30.0], [41.3, 30.0], [41.4, 30.0], [41.5, 30.0], [41.6, 30.0], [41.7, 30.0], [41.8, 30.0], [41.9, 30.0], [42.0, 30.0], [42.1, 30.0], [42.2, 30.0], [42.3, 30.0], [42.4, 30.0], [42.5, 30.0], [42.6, 30.0], [42.7, 30.0], [42.8, 30.0], [42.9, 30.0], [43.0, 31.0], [43.1, 31.0], [43.2, 31.0], [43.3, 31.0], [43.4, 31.0], [43.5, 32.0], [43.6, 32.0], [43.7, 32.0], [43.8, 32.0], [43.9, 32.0], [44.0, 32.0], [44.1, 32.0], [44.2, 32.0], [44.3, 32.0], [44.4, 32.0], [44.5, 32.0], [44.6, 32.0], [44.7, 32.0], [44.8, 32.0], [44.9, 32.0], [45.0, 32.0], [45.1, 32.0], [45.2, 32.0], [45.3, 32.0], [45.4, 32.0], [45.5, 32.0], [45.6, 32.0], [45.7, 32.0], [45.8, 32.0], [45.9, 32.0], [46.0, 33.0], [46.1, 33.0], [46.2, 33.0], [46.3, 33.0], [46.4, 33.0], [46.5, 33.0], [46.6, 33.0], [46.7, 33.0], [46.8, 33.0], [46.9, 33.0], [47.0, 33.0], [47.1, 33.0], [47.2, 33.0], [47.3, 33.0], [47.4, 33.0], [47.5, 33.0], [47.6, 33.0], [47.7, 33.0], [47.8, 33.0], [47.9, 33.0], [48.0, 34.0], [48.1, 34.0], [48.2, 34.0], [48.3, 34.0], [48.4, 34.0], [48.5, 34.0], [48.6, 34.0], [48.7, 34.0], [48.8, 34.0], [48.9, 34.0], [49.0, 34.0], [49.1, 34.0], [49.2, 34.0], [49.3, 34.0], [49.4, 34.0], [49.5, 34.0], [49.6, 34.0], [49.7, 34.0], [49.8, 34.0], [49.9, 34.0], [50.0, 34.0], [50.1, 34.0], [50.2, 34.0], [50.3, 34.0], [50.4, 34.0], [50.5, 35.0], [50.6, 35.0], [50.7, 35.0], [50.8, 35.0], [50.9, 35.0], [51.0, 35.0], [51.1, 35.0], [51.2, 35.0], [51.3, 35.0], [51.4, 35.0], [51.5, 35.0], [51.6, 35.0], [51.7, 35.0], [51.8, 35.0], [51.9, 35.0], [52.0, 35.0], [52.1, 35.0], [52.2, 35.0], [52.3, 35.0], [52.4, 35.0], [52.5, 35.0], [52.6, 35.0], [52.7, 35.0], [52.8, 35.0], [52.9, 35.0], [53.0, 37.0], [53.1, 37.0], [53.2, 37.0], [53.3, 37.0], [53.4, 37.0], [53.5, 38.0], [53.6, 38.0], [53.7, 38.0], [53.8, 38.0], [53.9, 38.0], [54.0, 38.0], [54.1, 38.0], [54.2, 38.0], [54.3, 38.0], [54.4, 38.0], [54.5, 40.0], [54.6, 40.0], [54.7, 40.0], [54.8, 40.0], [54.9, 40.0], [55.0, 48.0], [55.1, 48.0], [55.2, 48.0], [55.3, 48.0], [55.4, 48.0], [55.5, 48.0], [55.6, 48.0], [55.7, 48.0], [55.8, 48.0], [55.9, 48.0], [56.0, 48.0], [56.1, 48.0], [56.2, 48.0], [56.3, 48.0], [56.4, 48.0], [56.5, 53.0], [56.6, 53.0], [56.7, 53.0], [56.8, 53.0], [56.9, 53.0], [57.0, 97.0], [57.1, 97.0], [57.2, 97.0], [57.3, 97.0], [57.4, 97.0], [57.5, 226.0], [57.6, 226.0], [57.7, 226.0], [57.8, 226.0], [57.9, 226.0], [58.0, 251.0], [58.1, 251.0], [58.2, 251.0], [58.3, 251.0], [58.4, 251.0], [58.5, 260.0], [58.6, 260.0], [58.7, 260.0], [58.8, 260.0], [58.9, 260.0], [59.0, 269.0], [59.1, 269.0], [59.2, 269.0], [59.3, 269.0], [59.4, 269.0], [59.5, 275.0], [59.6, 275.0], [59.7, 275.0], [59.8, 275.0], [59.9, 275.0], [60.0, 283.0], [60.1, 283.0], [60.2, 283.0], [60.3, 283.0], [60.4, 283.0], [60.5, 285.0], [60.6, 285.0], [60.7, 285.0], [60.8, 285.0], [60.9, 285.0], [61.0, 285.0], [61.1, 285.0], [61.2, 285.0], [61.3, 285.0], [61.4, 285.0], [61.5, 286.0], [61.6, 286.0], [61.7, 286.0], [61.8, 286.0], [61.9, 286.0], [62.0, 286.0], [62.1, 286.0], [62.2, 286.0], [62.3, 286.0], [62.4, 286.0], [62.5, 289.0], [62.6, 289.0], [62.7, 289.0], [62.8, 289.0], [62.9, 289.0], [63.0, 293.0], [63.1, 293.0], [63.2, 293.0], [63.3, 293.0], [63.4, 293.0], [63.5, 293.0], [63.6, 293.0], [63.7, 293.0], [63.8, 293.0], [63.9, 293.0], [64.0, 302.0], [64.1, 302.0], [64.2, 302.0], [64.3, 302.0], [64.4, 302.0], [64.5, 306.0], [64.6, 306.0], [64.7, 306.0], [64.8, 306.0], [64.9, 306.0], [65.0, 307.0], [65.1, 307.0], [65.2, 307.0], [65.3, 307.0], [65.4, 307.0], [65.5, 307.0], [65.6, 307.0], [65.7, 307.0], [65.8, 307.0], [65.9, 307.0], [66.0, 315.0], [66.1, 315.0], [66.2, 315.0], [66.3, 315.0], [66.4, 315.0], [66.5, 320.0], [66.6, 320.0], [66.7, 320.0], [66.8, 320.0], [66.9, 320.0], [67.0, 343.0], [67.1, 343.0], [67.2, 343.0], [67.3, 343.0], [67.4, 343.0], [67.5, 370.0], [67.6, 370.0], [67.7, 370.0], [67.8, 370.0], [67.9, 370.0], [68.0, 374.0], [68.1, 374.0], [68.2, 374.0], [68.3, 374.0], [68.4, 374.0], [68.5, 375.0], [68.6, 375.0], [68.7, 375.0], [68.8, 375.0], [68.9, 375.0], [69.0, 399.0], [69.1, 399.0], [69.2, 399.0], [69.3, 399.0], [69.4, 399.0], [69.5, 411.0], [69.6, 411.0], [69.7, 411.0], [69.8, 411.0], [69.9, 411.0], [70.0, 417.0], [70.1, 417.0], [70.2, 417.0], [70.3, 417.0], [70.4, 417.0], [70.5, 418.0], [70.6, 418.0], [70.7, 418.0], [70.8, 418.0], [70.9, 418.0], [71.0, 427.0], [71.1, 427.0], [71.2, 427.0], [71.3, 427.0], [71.4, 427.0], [71.5, 429.0], [71.6, 429.0], [71.7, 429.0], [71.8, 429.0], [71.9, 429.0], [72.0, 429.0], [72.1, 429.0], [72.2, 429.0], [72.3, 429.0], [72.4, 429.0], [72.5, 432.0], [72.6, 432.0], [72.7, 432.0], [72.8, 432.0], [72.9, 432.0], [73.0, 437.0], [73.1, 437.0], [73.2, 437.0], [73.3, 437.0], [73.4, 437.0], [73.5, 438.0], [73.6, 438.0], [73.7, 438.0], [73.8, 438.0], [73.9, 438.0], [74.0, 441.0], [74.1, 441.0], [74.2, 441.0], [74.3, 441.0], [74.4, 441.0], [74.5, 443.0], [74.6, 443.0], [74.7, 443.0], [74.8, 443.0], [74.9, 443.0], [75.0, 445.0], [75.1, 445.0], [75.2, 445.0], [75.3, 445.0], [75.4, 445.0], [75.5, 445.0], [75.6, 445.0], [75.7, 445.0], [75.8, 445.0], [75.9, 445.0], [76.0, 446.0], [76.1, 446.0], [76.2, 446.0], [76.3, 446.0], [76.4, 446.0], [76.5, 452.0], [76.6, 452.0], [76.7, 452.0], [76.8, 452.0], [76.9, 452.0], [77.0, 455.0], [77.1, 455.0], [77.2, 455.0], [77.3, 455.0], [77.4, 455.0], [77.5, 456.0], [77.6, 456.0], [77.7, 456.0], [77.8, 456.0], [77.9, 456.0], [78.0, 471.0], [78.1, 471.0], [78.2, 471.0], [78.3, 471.0], [78.4, 471.0], [78.5, 473.0], [78.6, 473.0], [78.7, 473.0], [78.8, 473.0], [78.9, 473.0], [79.0, 475.0], [79.1, 475.0], [79.2, 475.0], [79.3, 475.0], [79.4, 475.0], [79.5, 479.0], [79.6, 479.0], [79.7, 479.0], [79.8, 479.0], [79.9, 479.0], [80.0, 489.0], [80.1, 489.0], [80.2, 489.0], [80.3, 489.0], [80.4, 489.0], [80.5, 491.0], [80.6, 491.0], [80.7, 491.0], [80.8, 491.0], [80.9, 491.0], [81.0, 491.0], [81.1, 491.0], [81.2, 491.0], [81.3, 491.0], [81.4, 491.0], [81.5, 496.0], [81.6, 496.0], [81.7, 496.0], [81.8, 496.0], [81.9, 496.0], [82.0, 498.0], [82.1, 498.0], [82.2, 498.0], [82.3, 498.0], [82.4, 498.0], [82.5, 510.0], [82.6, 510.0], [82.7, 510.0], [82.8, 510.0], [82.9, 510.0], [83.0, 511.0], [83.1, 511.0], [83.2, 511.0], [83.3, 511.0], [83.4, 511.0], [83.5, 519.0], [83.6, 519.0], [83.7, 519.0], [83.8, 519.0], [83.9, 519.0], [84.0, 529.0], [84.1, 529.0], [84.2, 529.0], [84.3, 529.0], [84.4, 529.0], [84.5, 535.0], [84.6, 535.0], [84.7, 535.0], [84.8, 535.0], [84.9, 535.0], [85.0, 537.0], [85.1, 537.0], [85.2, 537.0], [85.3, 537.0], [85.4, 537.0], [85.5, 543.0], [85.6, 543.0], [85.7, 543.0], [85.8, 543.0], [85.9, 543.0], [86.0, 581.0], [86.1, 581.0], [86.2, 581.0], [86.3, 581.0], [86.4, 581.0], [86.5, 585.0], [86.6, 585.0], [86.7, 585.0], [86.8, 585.0], [86.9, 585.0], [87.0, 617.0], [87.1, 617.0], [87.2, 617.0], [87.3, 617.0], [87.4, 617.0], [87.5, 623.0], [87.6, 623.0], [87.7, 623.0], [87.8, 623.0], [87.9, 623.0], [88.0, 633.0], [88.1, 633.0], [88.2, 633.0], [88.3, 633.0], [88.4, 633.0], [88.5, 667.0], [88.6, 667.0], [88.7, 667.0], [88.8, 667.0], [88.9, 667.0], [89.0, 671.0], [89.1, 671.0], [89.2, 671.0], [89.3, 671.0], [89.4, 671.0], [89.5, 681.0], [89.6, 681.0], [89.7, 681.0], [89.8, 681.0], [89.9, 681.0], [90.0, 695.0], [90.1, 695.0], [90.2, 695.0], [90.3, 695.0], [90.4, 695.0], [90.5, 697.0], [90.6, 697.0], [90.7, 697.0], [90.8, 697.0], [90.9, 697.0], [91.0, 702.0], [91.1, 702.0], [91.2, 702.0], [91.3, 702.0], [91.4, 702.0], [91.5, 746.0], [91.6, 746.0], [91.7, 746.0], [91.8, 746.0], [91.9, 746.0], [92.0, 1052.0], [92.1, 1052.0], [92.2, 1052.0], [92.3, 1052.0], [92.4, 1052.0], [92.5, 1077.0], [92.6, 1077.0], [92.7, 1077.0], [92.8, 1077.0], [92.9, 1077.0], [93.0, 1107.0], [93.1, 1107.0], [93.2, 1107.0], [93.3, 1107.0], [93.4, 1107.0], [93.5, 1286.0], [93.6, 1286.0], [93.7, 1286.0], [93.8, 1286.0], [93.9, 1286.0], [94.0, 1303.0], [94.1, 1303.0], [94.2, 1303.0], [94.3, 1303.0], [94.4, 1303.0], [94.5, 1388.0], [94.6, 1388.0], [94.7, 1388.0], [94.8, 1388.0], [94.9, 1388.0], [95.0, 1405.0], [95.1, 1405.0], [95.2, 1405.0], [95.3, 1405.0], [95.4, 1405.0], [95.5, 1413.0], [95.6, 1413.0], [95.7, 1413.0], [95.8, 1413.0], [95.9, 1413.0], [96.0, 1474.0], [96.1, 1474.0], [96.2, 1474.0], [96.3, 1474.0], [96.4, 1474.0], [96.5, 1485.0], [96.6, 1485.0], [96.7, 1485.0], [96.8, 1485.0], [96.9, 1485.0], [97.0, 1505.0], [97.1, 1505.0], [97.2, 1505.0], [97.3, 1505.0], [97.4, 1505.0], [97.5, 1611.0], [97.6, 1611.0], [97.7, 1611.0], [97.8, 1611.0], [97.9, 1611.0], [98.0, 1744.0], [98.1, 1744.0], [98.2, 1744.0], [98.3, 1744.0], [98.4, 1744.0], [98.5, 2102.0], [98.6, 2102.0], [98.7, 2102.0], [98.8, 2102.0], [98.9, 2102.0], [99.0, 2732.0], [99.1, 2732.0], [99.2, 2732.0], [99.3, 2732.0], [99.4, 2732.0], [99.5, 3312.0], [99.6, 3312.0], [99.7, 3312.0], [99.8, 3312.0], [99.9, 3312.0]], "isOverall": false, "label": "List_user_Per_page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 115.0, "series": [{"data": [[0.0, 9.0], [800.0, 1.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 2.0], [1200.0, 2.0], [1300.0, 2.0], [1400.0, 5.0], [1500.0, 6.0], [1600.0, 5.0], [1700.0, 6.0], [1800.0, 4.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 4.0], [2200.0, 4.0], [2300.0, 3.0], [2400.0, 4.0], [2500.0, 8.0], [2600.0, 6.0], [2800.0, 2.0], [2700.0, 3.0], [2900.0, 4.0], [3000.0, 5.0], [3100.0, 1.0], [3300.0, 4.0], [3200.0, 4.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 6.0], [3600.0, 3.0], [3800.0, 3.0], [3900.0, 6.0], [4000.0, 3.0], [4100.0, 3.0], [4300.0, 3.0], [4200.0, 1.0], [4600.0, 5.0], [4500.0, 5.0], [4400.0, 4.0], [4700.0, 3.0], [5200.0, 3.0], [5400.0, 1.0], [5500.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [6000.0, 2.0], [6600.0, 1.0], [6700.0, 2.0], [6800.0, 2.0], [7100.0, 1.0], [7300.0, 2.0], [7600.0, 2.0], [7500.0, 1.0], [7700.0, 1.0], [8100.0, 2.0], [8200.0, 1.0], [9000.0, 1.0], [9700.0, 1.0], [10900.0, 1.0], [11600.0, 1.0], [11800.0, 1.0], [12300.0, 1.0], [13000.0, 1.0], [100.0, 9.0], [300.0, 1.0], [400.0, 4.0], [500.0, 5.0]], "isOverall": false, "label": "List_User", "isController": false}, {"data": [[600.0, 4.0], [700.0, 3.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 6.0], [1100.0, 6.0], [1200.0, 9.0], [1300.0, 5.0], [1400.0, 5.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 3.0], [1800.0, 5.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 4.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 4.0], [2900.0, 3.0], [3000.0, 2.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [3400.0, 4.0], [3500.0, 3.0], [3600.0, 2.0], [3700.0, 4.0], [3800.0, 2.0], [3900.0, 3.0], [4000.0, 5.0], [4200.0, 3.0], [4300.0, 2.0], [4100.0, 2.0], [4600.0, 1.0], [4400.0, 1.0], [4800.0, 2.0], [5100.0, 3.0], [5000.0, 2.0], [5200.0, 1.0], [5300.0, 2.0], [5600.0, 1.0], [5500.0, 3.0], [6100.0, 2.0], [6000.0, 1.0], [6200.0, 1.0], [6300.0, 1.0], [6400.0, 4.0], [6500.0, 2.0], [6800.0, 1.0], [6900.0, 1.0], [6700.0, 1.0], [7400.0, 1.0], [8600.0, 1.0], [9200.0, 1.0], [9000.0, 1.0], [9500.0, 1.0], [9700.0, 1.0], [9800.0, 1.0], [10000.0, 1.0], [10100.0, 2.0], [10200.0, 1.0], [10300.0, 2.0], [10600.0, 1.0], [10700.0, 2.0], [10500.0, 1.0], [10800.0, 1.0], [11000.0, 1.0], [11200.0, 1.0], [11400.0, 1.0], [11600.0, 1.0], [12100.0, 2.0], [12000.0, 1.0], [13000.0, 1.0], [14200.0, 1.0], [14300.0, 1.0], [14800.0, 1.0], [15500.0, 1.0], [15700.0, 3.0], [15600.0, 2.0], [15800.0, 4.0], [15900.0, 2.0], [16100.0, 2.0], [16600.0, 2.0], [16500.0, 2.0], [16700.0, 3.0], [16900.0, 2.0], [16800.0, 1.0], [17100.0, 1.0], [17200.0, 1.0], [17700.0, 1.0], [19000.0, 1.0], [22300.0, 1.0], [37400.0, 1.0]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[0.0, 115.0], [2100.0, 1.0], [600.0, 8.0], [700.0, 2.0], [2700.0, 1.0], [200.0, 13.0], [3300.0, 1.0], [1000.0, 2.0], [1100.0, 1.0], [300.0, 11.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 4.0], [1500.0, 1.0], [400.0, 26.0], [1600.0, 1.0], [1700.0, 1.0], [500.0, 9.0]], "isOverall": false, "label": "List_user_Per_page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 37400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 42.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 370.0, "series": [{"data": [[0.0, 188.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 42.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 370.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 40.28888888888888, "minX": 1.64421474E12, "maxY": 119.00784313725491, "series": [{"data": [[1.6442148E12, 40.28888888888888], [1.64421474E12, 119.00784313725491]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6442148E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 37463.0, "series": [{"data": [[35.0, 10968.0], [39.0, 11682.0], [38.0, 13004.0], [40.0, 11878.0], [46.0, 12397.0], [76.0, 7328.0], [91.0, 2889.420454545454], [88.0, 7612.0], [93.0, 7160.0], [99.0, 5680.5], [97.0, 9721.0], [100.0, 3183.714285714286], [103.0, 112.16666666666666], [101.0, 8181.0], [107.0, 67.5], [104.0, 6668.0], [109.0, 68.0], [110.0, 74.0], [112.0, 1514.3333333333333], [115.0, 4764.0], [123.0, 8184.0], [120.0, 6057.0], [126.0, 5242.2], [125.0, 5437.75], [134.0, 3063.0], [133.0, 3512.0], [130.0, 6793.0], [129.0, 3798.5], [128.0, 6867.0], [142.0, 3338.3333333333335], [141.0, 4081.0], [140.0, 2534.0], [139.0, 6060.0], [137.0, 3971.0], [144.0, 1087.0], [149.0, 1110.0], [151.0, 2084.0], [150.0, 2188.0], [153.0, 3210.5], [155.0, 2264.25], [154.0, 2591.3333333333335], [158.0, 1626.0], [157.0, 2314.625], [159.0, 1736.0], [156.0, 2497.0], [152.0, 1881.0], [160.0, 2119.6666666666665], [161.0, 2375.25], [163.0, 3384.5], [164.0, 2715.3333333333335], [162.0, 2657.6666666666665]], "isOverall": false, "label": "List_User", "isController": false}, {"data": [[111.88000000000002, 3251.0999999999995]], "isOverall": false, "label": "List_User-Aggregated", "isController": false}, {"data": [[2.0, 22313.0], [3.0, 19051.0], [4.0, 17759.0], [5.0, 17236.0], [6.0, 17143.0], [7.0, 16684.0], [9.0, 16907.5], [10.0, 16927.0], [12.0, 14207.5], [13.0, 16746.0], [15.0, 16657.0], [16.0, 16580.0], [17.0, 16656.0], [18.0, 16146.0], [19.0, 16149.0], [20.0, 15969.0], [21.0, 15849.0], [23.0, 15896.5], [24.0, 15873.0], [25.0, 15799.0], [26.0, 15857.0], [27.0, 15736.0], [28.0, 15676.0], [29.0, 15688.0], [30.0, 15732.0], [31.0, 15586.0], [33.0, 14827.0], [32.0, 635.0], [35.0, 14251.0], [34.0, 14313.0], [37.0, 628.0], [36.0, 629.0], [39.0, 709.0], [38.0, 633.0], [41.0, 2380.0], [40.0, 13096.0], [43.0, 2046.0], [42.0, 2484.0], [45.0, 3744.0], [44.0, 2304.0], [47.0, 3226.0], [46.0, 3725.0], [49.0, 5391.0], [48.0, 12163.0], [51.0, 2869.0], [50.0, 5328.0], [53.0, 4066.0], [52.0, 12049.0], [55.0, 9448.0], [57.0, 1040.0], [56.0, 6198.0], [59.0, 952.0], [58.0, 5150.0], [61.0, 5037.0], [60.0, 761.0], [63.0, 1100.0], [62.0, 846.0], [67.0, 964.0], [66.0, 11468.0], [65.0, 9031.0], [64.0, 4849.0], [71.0, 11262.0], [70.0, 2852.0], [69.0, 863.0], [68.0, 887.0], [75.0, 787.0], [74.0, 2931.0], [73.0, 2851.0], [72.0, 11072.0], [79.0, 5209.0], [78.0, 3990.0], [77.0, 10810.0], [76.0, 808.0], [83.0, 1374.0], [81.0, 1261.0], [80.0, 10756.0], [87.0, 10165.0], [86.0, 10686.0], [85.0, 10763.0], [84.0, 10585.0], [91.0, 3064.0], [90.0, 10286.0], [89.0, 10303.0], [88.0, 10347.0], [95.0, 10005.0], [94.0, 1222.0], [93.0, 1205.0], [92.0, 10104.0], [99.0, 5072.0], [98.0, 9751.0], [97.0, 5592.0], [96.0, 9880.0], [103.0, 3173.0], [102.0, 9519.0], [101.0, 995.0], [100.0, 1007.0], [107.0, 1384.0], [106.0, 1450.0], [105.0, 9238.0], [104.0, 2320.0], [111.0, 4358.0], [110.0, 1304.0], [109.0, 1346.0], [108.0, 1400.0], [115.0, 1708.0], [114.0, 1962.0], [113.0, 3854.0], [112.0, 1251.0], [119.0, 3968.0], [118.0, 5539.0], [117.0, 8607.0], [116.0, 1158.0], [123.0, 1181.0], [122.0, 1236.0], [121.0, 1229.0], [120.0, 4125.0], [127.0, 4467.0], [126.0, 3539.0], [125.0, 1132.0], [124.0, 1130.0], [131.0, 1315.0], [135.0, 7465.0], [134.0, 1856.0], [133.0, 1044.0], [132.0, 4079.0], [130.0, 1064.0], [129.0, 1460.0], [128.0, 1546.0], [139.0, 4216.5], [138.0, 2159.0], [141.0, 1793.0], [143.0, 1921.0], [142.0, 1809.0], [140.0, 6857.0], [137.0, 4162.0], [136.0, 1086.0], [145.0, 4406.0], [144.0, 3664.0], [151.0, 3427.666666666667], [149.0, 6438.0], [147.0, 6459.0], [146.0, 1260.0], [153.0, 4377.5], [156.0, 3806.0], [154.0, 4027.666666666667], [159.0, 3385.428571428571], [158.0, 3019.6666666666665], [157.0, 5610.0], [155.0, 6131.0], [152.0, 6413.0], [161.0, 3741.8750000000005], [160.0, 3964.5], [162.0, 2639.5], [163.0, 3120.0], [164.0, 4677.0], [1.0, 37463.0]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[95.5449999999999, 6302.220000000004]], "isOverall": false, "label": "Home Page-Aggregated", "isController": false}, {"data": [[35.0, 18.0], [38.0, 17.0], [40.0, 11.0], [46.0, 18.0], [72.0, 1405.0], [78.0, 1077.0], [76.0, 1167.3333333333335], [80.0, 691.0], [86.0, 300.25], [85.0, 306.0], [91.0, 948.5], [99.0, 399.0], [100.0, 33.57142857142857], [101.0, 21.0], [103.0, 28.125000000000007], [102.0, 411.0], [104.0, 23.590909090909093], [107.0, 16.0], [106.0, 746.0], [108.0, 17.0], [109.0, 13.0], [110.0, 19.0], [112.0, 222.0], [115.0, 662.6], [119.0, 3312.0], [117.0, 1286.0], [126.0, 448.25], [125.0, 469.5], [135.0, 443.0], [129.0, 446.0], [142.0, 1470.0], [141.0, 671.0], [139.0, 879.5], [137.0, 438.6666666666667], [136.0, 742.0], [148.0, 302.0], [149.0, 1485.0], [153.0, 516.5], [155.0, 487.0], [156.0, 537.0], [157.0, 491.5], [159.0, 465.6666666666667], [158.0, 695.5], [154.0, 490.3333333333333], [152.0, 585.0], [160.0, 493.6666666666667], [163.0, 287.0], [164.0, 296.5], [162.0, 417.0]], "isOverall": false, "label": "List_user_Per_page", "isController": false}, {"data": [[114.17499999999997, 298.78000000000003]], "isOverall": false, "label": "List_user_Per_page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 164.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 174.73333333333332, "minX": 1.64421474E12, "maxY": 68575.96666666666, "series": [{"data": [[1.6442148E12, 38078.583333333336], [1.64421474E12, 68575.96666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6442148E12, 174.73333333333332], [1.64421474E12, 1071.9333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6442148E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 286.7434554973821, "minX": 1.64421474E12, "maxY": 11985.8, "series": [{"data": [[1.6442148E12, 11985.8], [1.64421474E12, 3027.1333333333328]], "isOverall": false, "label": "List_User", "isController": false}, {"data": [[1.6442148E12, 9921.789473684214], [1.64421474E12, 4083.7741935483864]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[1.6442148E12, 554.2222222222222], [1.64421474E12, 286.7434554973821]], "isOverall": false, "label": "List_user_Per_page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6442148E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 286.7172774869111, "minX": 1.64421474E12, "maxY": 11985.8, "series": [{"data": [[1.6442148E12, 11985.8], [1.64421474E12, 3020.6153846153848]], "isOverall": false, "label": "List_User", "isController": false}, {"data": [[1.6442148E12, 2277.592105263159], [1.64421474E12, 1501.2419354838717]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[1.6442148E12, 554.2222222222222], [1.64421474E12, 286.7172774869111]], "isOverall": false, "label": "List_user_Per_page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6442148E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64421474E12, "maxY": 11972.6, "series": [{"data": [[1.6442148E12, 11972.6], [1.64421474E12, 2629.6923076923067]], "isOverall": false, "label": "List_User", "isController": false}, {"data": [[1.6442148E12, 0.0], [1.64421474E12, 0.0]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[1.6442148E12, 0.0], [1.64421474E12, 0.0]], "isOverall": false, "label": "List_user_Per_page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6442148E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.64421474E12, "maxY": 995.0, "series": [{"data": [[1.6442148E12, 964.0], [1.64421474E12, 995.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6442148E12, 952.0], [1.64421474E12, 536.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6442148E12, 964.0], [1.64421474E12, 944.04]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6442148E12, 964.0], [1.64421474E12, 674.9999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6442148E12, 11.0], [1.64421474E12, 10.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6442148E12, 635.0], [1.64421474E12, 48.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6442148E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 26.0, "minX": 1.0, "maxY": 22313.0, "series": [{"data": [[32.0, 445.0], [34.0, 293.0], [38.0, 535.0], [39.0, 287.5], [43.0, 418.0], [11.0, 326.0], [14.0, 302.0], [19.0, 485.0], [21.0, 827.0], [104.0, 252.0], [114.0, 26.0], [28.0, 469.5], [7.0, 628.0], [29.0, 504.5], [31.0, 688.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 2497.0], [34.0, 3033.0], [38.0, 3058.0], [39.0, 7570.0], [43.0, 3837.5], [11.0, 15682.0], [3.0, 17236.0], [14.0, 2144.0], [15.0, 16656.0], [4.0, 1628.5], [1.0, 22313.0], [19.0, 5150.0], [21.0, 2931.0], [104.0, 3112.5], [28.0, 4046.5], [7.0, 14282.0], [29.0, 3432.0], [31.0, 3854.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 114.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 26.0, "minX": 1.0, "maxY": 12600.5, "series": [{"data": [[32.0, 445.0], [34.0, 293.0], [38.0, 535.0], [39.0, 287.5], [43.0, 418.0], [11.0, 221.5], [14.0, 302.0], [19.0, 325.0], [21.0, 574.5], [104.0, 252.0], [114.0, 26.0], [28.0, 469.5], [7.0, 423.0], [29.0, 504.5], [31.0, 688.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 1659.0], [34.0, 1827.0], [38.0, 2223.0], [39.0, 1611.0], [43.0, 2220.0], [11.0, 5591.5], [3.0, 1405.0], [14.0, 1113.0], [15.0, 1749.0], [4.0, 514.5], [1.0, 1447.0], [19.0, 918.0], [21.0, 2102.0], [104.0, 3112.5], [28.0, 1433.0], [7.0, 12600.5], [29.0, 1572.0], [31.0, 1331.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 114.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.23333333333333334, "minX": 1.64421474E12, "maxY": 9.766666666666667, "series": [{"data": [[1.6442148E12, 0.23333333333333334], [1.64421474E12, 9.766666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6442148E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.64421474E12, "maxY": 8.5, "series": [{"data": [[1.6442148E12, 1.5], [1.64421474E12, 8.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6442148E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.64421474E12, "maxY": 2.966666666666667, "series": [{"data": [[1.6442148E12, 1.05], [1.64421474E12, 2.033333333333333]], "isOverall": false, "label": "Home Page-failure", "isController": false}, {"data": [[1.6442148E12, 0.21666666666666667], [1.64421474E12, 0.03333333333333333]], "isOverall": false, "label": "Home Page-success", "isController": false}, {"data": [[1.6442148E12, 0.08333333333333333], [1.64421474E12, 2.7333333333333334]], "isOverall": false, "label": "List_User-failure", "isController": false}, {"data": [[1.64421474E12, 0.5166666666666667]], "isOverall": false, "label": "List_User-success", "isController": false}, {"data": [[1.6442148E12, 0.05], [1.64421474E12, 0.21666666666666667]], "isOverall": false, "label": "List_user_Per_page-failure", "isController": false}, {"data": [[1.6442148E12, 0.1], [1.64421474E12, 2.966666666666667]], "isOverall": false, "label": "List_user_Per_page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6442148E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.64421474E12, "maxY": 4.983333333333333, "series": [{"data": [[1.6442148E12, 0.31666666666666665], [1.64421474E12, 3.5166666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6442148E12, 1.1833333333333333], [1.64421474E12, 4.983333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6442148E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

